"use strict";
/**
 * Oleg Karpach code 21/07/17.
 */
var express = require("express");
var authentication = require("../Authentication");
var CampgroundRepository_1 = require("../repository/CampgroundRepository");
var router = express.Router();
var campgroundRepository = new CampgroundRepository_1.default();
// get all campgrounds
router.get('/campground', function (req, res) {
    try {
        campgroundRepository.findAll(function (callback) {
            callback.message = 'OK';
            res.status(200).send(callback);
        });
    }
    catch (err) {
        res.status(500).send({ message: err });
    }
});
// create one campground
router.post('/campground', authentication.isLoggedIn, function (req, res) {
    req.body.name = req.sanitize(req.body.name);
    req.body.image = req.sanitize(req.body.image);
    req.body.description = req.sanitize(req.body.description);
    req.body.price = req.sanitize(req.body.price);
    try {
        campgroundRepository.createOne(req.body, function (callback) {
            callback.message = 'OK';
            res.status(200).send(callback);
        });
    }
    catch (err) {
        res.status(500).send({ message: err });
    }
});
router.get('/campground/:id', function (req, res) {
    try {
        campgroundRepository.findOneById(req.params.id, function (callback) {
            callback.message = 'OK';
            res.status(200).send(callback);
        });
    }
    catch (err) {
        res.status(500).send({ message: err });
    }
});
router.get('/campground/:id/edit', authentication.checkCampOwner, function (req, res) {
    try {
        campgroundRepository.findOneById(req.params.id, function (callback) {
            callback.message = 'OK';
            res.status(200).send(callback);
        });
    }
    catch (err) {
        res.status(500).send({ message: err });
    }
});
// edit one campground
router.put('/campground/:id/edit', authentication.checkCampOwner, function (req, res) {
    req.body.name = req.sanitize(req.body.name);
    req.body.image = req.sanitize(req.body.image);
    req.body.description = req.sanitize(req.body.description);
    req.body.price = req.sanitize(req.body.price);
    try {
        campgroundRepository.updateOne(req.body);
        res.status(200).send({ message: 'OK' });
    }
    catch (err) {
        res.status(500).send({ message: err });
    }
});
// delete one campground
router.delete('/campground/:id', authentication.checkCampOwner, function (req, res) {
    try {
        campgroundRepository.deleteOne(req.params.id);
        res.status(200).send({ message: 'OK' });
    }
    catch (err) {
        res.status(500).send({ message: err });
    }
});
module.exports = router;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7S0FDeEM7SUFBQyxPQUFPLEdBQUcsRUFBRTtRQUNiLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7S0FDdEM7QUFDRixDQUFDLENBQUMsQ0FBQztBQUVILHdCQUF3QjtBQUN4QixNQUFNLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLGNBQWMsQ0FBQyxjQUFjLEVBQUUsVUFBQyxHQUFRLEVBQUUsR0FBUTtJQUNsRixJQUFJO1FBQ0gsb0JBQW9CLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDOUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztLQUN4QztJQUFDLE9BQU8sR0FBRyxFQUFFO1FBQ2IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtLQUN0QztBQUNGLENBQUMsQ0FBQyxDQUFDO0FBRUgsaUJBQVMsTUFBTSxDQUFDIiwiZmlsZSI6InJvdXRlcy9DYW1wZ3JvdW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBPbGVnIEthcnBhY2ggY29kZSAyMS8wNy8xNy5cbiAqL1xuXG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0ICogYXMgYXV0aGVudGljYXRpb24gZnJvbSAnLi4vQXV0aGVudGljYXRpb24nO1xuaW1wb3J0IENhbXBncm91bmRSZXBvc2l0b3J5IGZyb20gJy4uL3JlcG9zaXRvcnkvQ2FtcGdyb3VuZFJlcG9zaXRvcnknO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgY2FtcGdyb3VuZFJlcG9zaXRvcnkgPSBuZXcgQ2FtcGdyb3VuZFJlcG9zaXRvcnkoKTtcblxuLy8gZ2V0IGFsbCBjYW1wZ3JvdW5kc1xucm91dGVyLmdldCgnL2NhbXBncm91bmQnLCAocmVxOiBhbnksIHJlczogYW55KSA9PiB7XG5cdHRyeSB7XG5cdFx0Y2FtcGdyb3VuZFJlcG9zaXRvcnkuZmluZEFsbCgoY2FsbGJhY2s6IGFueSkgPT4ge1xuXHRcdFx0Y2FsbGJhY2subWVzc2FnZSA9ICdPSyc7XG5cdFx0XHRyZXMuc3RhdHVzKDIwMCkuc2VuZChjYWxsYmFjayk7XG5cdFx0fSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdHJlcy5zdGF0dXMoNTAwKS5zZW5kKHsgbWVzc2FnZTogZXJyIH0pXG5cdH1cbn0pO1xuXG4vLyBjcmVhdGUgb25lIGNhbXBncm91bmRcbnJvdXRlci5wb3N0KCcvY2FtcGdyb3VuZCcsIGF1dGhlbnRpY2F0aW9uLmlzTG9nZ2VkSW4sIChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcblx0cmVxLmJvZHkubmFtZSA9IHJlcS5zYW5pdGl6ZShyZXEuYm9keS5uYW1lKTtcblx0cmVxLmJvZHkuaW1hZ2UgPSByZXEuc2FuaXRpemUocmVxLmJvZHkuaW1hZ2UpO1xuXHRyZXEuYm9keS5kZXNjcmlwdGlvbiA9IHJlcS5zYW5pdGl6ZShyZXEuYm9keS5kZXNjcmlwdGlvbik7XG5cdHJlcS5ib2R5LnByaWNlID0gcmVxLnNhbml0aXplKHJlcS5ib2R5LnByaWNlKTtcblxuXHR0cnkge1xuXHRcdGNhbXBncm91bmRSZXBvc2l0b3J5LmNyZWF0ZU9uZShyZXEuYm9keSwgKGNhbGxiYWNrOiBhbnkpID0+IHtcblx0XHRcdGNhbGxiYWNrLm1lc3NhZ2UgPSAnT0snO1xuXHRcdFx0cmVzLnN0YXR1cygyMDApLnNlbmQoY2FsbGJhY2spO1xuXHRcdH0pO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7IG1lc3NhZ2U6IGVyciB9KVxuXHR9XG59KTtcblxucm91dGVyLmdldCgnL2NhbXBncm91bmQvOmlkJywgKHJlcTogYW55LCByZXM6IGFueSkgPT4ge1xuXHR0cnkge1xuXHRcdGNhbXBncm91bmRSZXBvc2l0b3J5LmZpbmRPbmVCeUlkKHJlcS5wYXJhbXMuaWQsIChjYWxsYmFjazogYW55KSA9PiB7XG5cdFx0XHRjYWxsYmFjay5tZXNzYWdlID0gJ09LJztcblx0XHRcdHJlcy5zdGF0dXMoMjAwKS5zZW5kKGNhbGxiYWNrKTtcblx0XHR9KTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0cmVzLnN0YXR1cyg1MDApLnNlbmQoeyBtZXNzYWdlOiBlcnIgfSlcblx0fVxufSk7XG5cbnJvdXRlci5nZXQoJy9jYW1wZ3JvdW5kLzppZC9lZGl0JywgYXV0aGVudGljYXRpb24uY2hlY2tDYW1wT3duZXIsIChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcblx0dHJ5IHtcblx0XHRjYW1wZ3JvdW5kUmVwb3NpdG9yeS5maW5kT25lQnlJZChyZXEucGFyYW1zLmlkLCAoY2FsbGJhY2s6IGFueSkgPT4ge1xuXHRcdFx0Y2FsbGJhY2subWVzc2FnZSA9ICdPSyc7XG5cdFx0XHRyZXMuc3RhdHVzKDIwMCkuc2VuZChjYWxsYmFjayk7XG5cdFx0fSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdHJlcy5zdGF0dXMoNTAwKS5zZW5kKHsgbWVzc2FnZTogZXJyIH0pXG5cdH1cbn0pO1xuXG4vLyBlZGl0IG9uZSBjYW1wZ3JvdW5kXG5yb3V0ZXIucHV0KCcvY2FtcGdyb3VuZC86aWQvZWRpdCcsIGF1dGhlbnRpY2F0aW9uLmNoZWNrQ2FtcE93bmVyLCAocmVxOiBhbnksIHJlczogYW55KSA9PiB7XG5cdHJlcS5ib2R5Lm5hbWUgPSByZXEuc2FuaXRpemUocmVxLmJvZHkubmFtZSk7XG5cdHJlcS5ib2R5LmltYWdlID0gcmVxLnNhbml0aXplKHJlcS5ib2R5LmltYWdlKTtcblx0cmVxLmJvZHkuZGVzY3JpcHRpb24gPSByZXEuc2FuaXRpemUocmVxLmJvZHkuZGVzY3JpcHRpb24pO1xuXHRyZXEuYm9keS5wcmljZSA9IHJlcS5zYW5pdGl6ZShyZXEuYm9keS5wcmljZSk7XG5cblx0dHJ5IHtcblx0XHRjYW1wZ3JvdW5kUmVwb3NpdG9yeS51cGRhdGVPbmUocmVxLmJvZHkpO1xuXHRcdHJlcy5zdGF0dXMoMjAwKS5zZW5kKHsgbWVzc2FnZTogJ09LJyB9KTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0cmVzLnN0YXR1cyg1MDApLnNlbmQoeyBtZXNzYWdlOiBlcnIgfSlcblx0fVxufSk7XG5cbi8vIGRlbGV0ZSBvbmUgY2FtcGdyb3VuZFxucm91dGVyLmRlbGV0ZSgnL2NhbXBncm91bmQvOmlkJywgYXV0aGVudGljYXRpb24uY2hlY2tDYW1wT3duZXIsIChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcblx0dHJ5IHtcblx0XHRjYW1wZ3JvdW5kUmVwb3NpdG9yeS5kZWxldGVPbmUocmVxLnBhcmFtcy5pZCk7XG5cdFx0cmVzLnN0YXR1cygyMDApLnNlbmQoeyBtZXNzYWdlOiAnT0snIH0pO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7IG1lc3NhZ2U6IGVyciB9KVxuXHR9XG59KTtcblxuZXhwb3J0ID0gcm91dGVyO1xuIl19
